name: Update docs and demo
on: 
  push:
    paths-ignore:
      - 'README.md'
      - 'demo/snake.zip'
      - 'demo/qr.png'
  workflow_dispatch:
permissions:
  id-token: write
concurrency:
  group: $GITHUB_WORKFLOW
  cancel-in-progress: false
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - run: |
        sudo apt install curl qrencode nasm python3 nodejs npm -y
        rm -rf snake
        git clone --depth=1 -b "$GITHUB_REF_NAME" "https://${{ secrets.PAT }}@github.com/$GITHUB_REPOSITORY"
        cd snake
        nasm snake.asm -o snake.com
        xxd -p snake.com | python3 docs/update.py
        qrencode -r snake.com -8 -o demo/qr.png
        zip demo/snake.zip snake.com
        tar cvf artifact.tar demo
        npm i @actions/artifact
        id=$(GITHUB_ACTIONS=true node -e "console.log((async () => await (new (require('@actions/artifact').DefaultArtifactClient)()).uploadArtifact('artifact', ['./artifact.tar'], '.')[0])())")
        rm -rf package*.json node_modules
        curl -H "Authorization: Bearer ${{ secrets.PAT }}" "$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/pages/deployments" -d '{"artifact_id":'"$id"',"pages_build_version":"${{ github.sha }}","oidc_token":'"$( curl -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq '.value' )}"
        git config --global user.email "$GITHUB_REPOSITORY_OWNER_ID+$GITHUB_REPOSITORY_OWNER@users.noreply.github.com"
        git config --global user.name "$GITHUB_REPOSITORY_OWNER"
        git add .
        git commit -m "${GITHUB_WORKFLOW,,}"
        git push
